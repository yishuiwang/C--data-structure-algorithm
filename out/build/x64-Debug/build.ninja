# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.22

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: data_struct____algorithm
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles\rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = D$:\Project_C++\data$ struct$ &&$ algorithm\out\build\x64-Debug\
# =============================================================================
# Object build statements for EXECUTABLE target data_struct____algorithm


#############################################
# Order-only phony target for data_struct____algorithm

build cmake_object_order_depends_target_data_struct____algorithm: phony || CMakeFiles\data_struct____algorithm.dir

build CMakeFiles\data_struct____algorithm.dir\main.cpp.obj: CXX_COMPILER__data_struct____algorithm_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\main.cpp || cmake_object_order_depends_target_data_struct____algorithm
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\data_struct____algorithm.dir
  OBJECT_FILE_DIR = CMakeFiles\data_struct____algorithm.dir
  TARGET_COMPILE_PDB = CMakeFiles\data_struct____algorithm.dir\
  TARGET_PDB = data_struct____algorithm.pdb


# =============================================================================
# Link build statements for EXECUTABLE target data_struct____algorithm


#############################################
# Link the executable data_struct____algorithm.exe

build data_struct____algorithm.exe: CXX_EXECUTABLE_LINKER__data_struct____algorithm_Debug CMakeFiles\data_struct____algorithm.dir\main.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\data_struct____algorithm.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/data_struct____algorithm.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\data_struct____algorithm.dir\
  TARGET_FILE = data_struct____algorithm.exe
  TARGET_IMPLIB = data_struct____algorithm.lib
  TARGET_PDB = data_struct____algorithm.pdb

# =============================================================================
# Object build statements for EXECUTABLE target algorithm


#############################################
# Order-only phony target for algorithm

build cmake_object_order_depends_target_algorithm: phony || CMakeFiles\algorithm.dir

build CMakeFiles\algorithm.dir\championship\championship.cpp.obj: CXX_COMPILER__algorithm_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\championship\championship.cpp || cmake_object_order_depends_target_algorithm
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\algorithm.dir
  OBJECT_FILE_DIR = CMakeFiles\algorithm.dir\championship
  TARGET_COMPILE_PDB = CMakeFiles\algorithm.dir\
  TARGET_PDB = algorithm.pdb


# =============================================================================
# Link build statements for EXECUTABLE target algorithm


#############################################
# Link the executable algorithm.exe

build algorithm.exe: CXX_EXECUTABLE_LINKER__algorithm_Debug CMakeFiles\algorithm.dir\championship\championship.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\algorithm.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/algorithm.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\algorithm.dir\
  TARGET_FILE = algorithm.exe
  TARGET_IMPLIB = algorithm.lib
  TARGET_PDB = algorithm.pdb

# =============================================================================
# Object build statements for EXECUTABLE target Knapsack


#############################################
# Order-only phony target for Knapsack

build cmake_object_order_depends_target_Knapsack: phony || CMakeFiles\Knapsack.dir

build CMakeFiles\Knapsack.dir\Knapsack\Knapsack.cpp.obj: CXX_COMPILER__Knapsack_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\Knapsack\Knapsack.cpp || cmake_object_order_depends_target_Knapsack
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\Knapsack.dir
  OBJECT_FILE_DIR = CMakeFiles\Knapsack.dir\Knapsack
  TARGET_COMPILE_PDB = CMakeFiles\Knapsack.dir\
  TARGET_PDB = Knapsack.pdb


# =============================================================================
# Link build statements for EXECUTABLE target Knapsack


#############################################
# Link the executable Knapsack.exe

build Knapsack.exe: CXX_EXECUTABLE_LINKER__Knapsack_Debug CMakeFiles\Knapsack.dir\Knapsack\Knapsack.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\Knapsack.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/Knapsack.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\Knapsack.dir\
  TARGET_FILE = Knapsack.exe
  TARGET_IMPLIB = Knapsack.lib
  TARGET_PDB = Knapsack.pdb

# =============================================================================
# Object build statements for EXECUTABLE target Graph


#############################################
# Order-only phony target for Graph

build cmake_object_order_depends_target_Graph: phony || CMakeFiles\Graph.dir

build CMakeFiles\Graph.dir\Graph\Matrix.cpp.obj: CXX_COMPILER__Graph_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\Graph\Matrix.cpp || cmake_object_order_depends_target_Graph
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\Graph.dir
  OBJECT_FILE_DIR = CMakeFiles\Graph.dir\Graph
  TARGET_COMPILE_PDB = CMakeFiles\Graph.dir\
  TARGET_PDB = Graph.pdb


# =============================================================================
# Link build statements for EXECUTABLE target Graph


#############################################
# Link the executable Graph.exe

build Graph.exe: CXX_EXECUTABLE_LINKER__Graph_Debug CMakeFiles\Graph.dir\Graph\Matrix.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\Graph.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/Graph.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\Graph.dir\
  TARGET_FILE = Graph.exe
  TARGET_IMPLIB = Graph.lib
  TARGET_PDB = Graph.pdb

# =============================================================================
# Object build statements for EXECUTABLE target Classification


#############################################
# Order-only phony target for Classification

build cmake_object_order_depends_target_Classification: phony || CMakeFiles\Classification.dir

build CMakeFiles\Classification.dir\Classification\KNN.cpp.obj: CXX_COMPILER__Classification_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\Classification\KNN.cpp || cmake_object_order_depends_target_Classification
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\Classification.dir
  OBJECT_FILE_DIR = CMakeFiles\Classification.dir\Classification
  TARGET_COMPILE_PDB = CMakeFiles\Classification.dir\
  TARGET_PDB = Classification.pdb


# =============================================================================
# Link build statements for EXECUTABLE target Classification


#############################################
# Link the executable Classification.exe

build Classification.exe: CXX_EXECUTABLE_LINKER__Classification_Debug CMakeFiles\Classification.dir\Classification\KNN.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\Classification.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/Classification.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\Classification.dir\
  TARGET_FILE = Classification.exe
  TARGET_IMPLIB = Classification.lib
  TARGET_PDB = Classification.pdb

# =============================================================================
# Object build statements for EXECUTABLE target Sort


#############################################
# Order-only phony target for Sort

build cmake_object_order_depends_target_Sort: phony || CMakeFiles\Sort.dir

build CMakeFiles\Sort.dir\Sort\quick.cpp.obj: CXX_COMPILER__Sort_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\Sort\quick.cpp || cmake_object_order_depends_target_Sort
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\Sort.dir
  OBJECT_FILE_DIR = CMakeFiles\Sort.dir\Sort
  TARGET_COMPILE_PDB = CMakeFiles\Sort.dir\
  TARGET_PDB = Sort.pdb


# =============================================================================
# Link build statements for EXECUTABLE target Sort


#############################################
# Link the executable Sort.exe

build Sort.exe: CXX_EXECUTABLE_LINKER__Sort_Debug CMakeFiles\Sort.dir\Sort\quick.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\Sort.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/Sort.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\Sort.dir\
  TARGET_FILE = Sort.exe
  TARGET_IMPLIB = Sort.lib
  TARGET_PDB = Sort.pdb

# =============================================================================
# Object build statements for EXECUTABLE target back_tracking


#############################################
# Order-only phony target for back_tracking

build cmake_object_order_depends_target_back_tracking: phony || CMakeFiles\back_tracking.dir

build CMakeFiles\back_tracking.dir\back_tracking\N-Queens.cpp.obj: CXX_COMPILER__back_tracking_Debug D$:\Project_C++\data$ struct$ &&$ algorithm\back_tracking\N-Queens.cpp || cmake_object_order_depends_target_back_tracking
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++20
  OBJECT_DIR = CMakeFiles\back_tracking.dir
  OBJECT_FILE_DIR = CMakeFiles\back_tracking.dir\back_tracking
  TARGET_COMPILE_PDB = CMakeFiles\back_tracking.dir\
  TARGET_PDB = back_tracking.pdb


# =============================================================================
# Link build statements for EXECUTABLE target back_tracking


#############################################
# Link the executable back_tracking.exe

build back_tracking.exe: CXX_EXECUTABLE_LINKER__back_tracking_Debug CMakeFiles\back_tracking.dir\back_tracking\N-Queens.cpp.obj
  FLAGS = /DWIN32 /D_WINDOWS /GR /EHsc /Zi /Ob0 /Od /RTC1 -MDd
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = CMakeFiles\back_tracking.dir
  POST_BUILD = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file D:/Project_Git/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary "D:/Project_C++/data struct && algorithm/out/build/x64-Debug/back_tracking.exe" -installedDir D:/Project_Git/vcpkg/installed/x64-windows/debug/bin -OutVariable out"
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = CMakeFiles\back_tracking.dir\
  TARGET_FILE = back_tracking.exe
  TARGET_IMPLIB = back_tracking.lib
  TARGET_PDB = back_tracking.pdb


#############################################
# Utility command for edit_cache

build CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles\edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "D:\Project_C++\data struct && algorithm\out\build\x64-Debug" && "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -S"D:\Project_C++\data struct && algorithm" -B"D:\Project_C++\data struct && algorithm\out\build\x64-Debug""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles\rebuild_cache.util

# =============================================================================
# Target aliases.

build Classification: phony Classification.exe

build Graph: phony Graph.exe

build Knapsack: phony Knapsack.exe

build Sort: phony Sort.exe

build algorithm: phony algorithm.exe

build back_tracking: phony back_tracking.exe

build data_struct____algorithm: phony data_struct____algorithm.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: D:/Project_C++/data struct && algorithm/out/build/x64-Debug

build all: phony data_struct____algorithm.exe algorithm.exe Knapsack.exe Graph.exe Classification.exe Sort.exe back_tracking.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ..\..\..\CMakeLists.txt C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeDependentOption.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\MSVC-C.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-C.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake CMakeCache.txt CMakeFiles\3.22.22022201-MSVC_2\CMakeCCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeCXXCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeRCCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeSystem.cmake D$:\Project_Git\vcpkg\scripts\buildsystems\vcpkg.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ..\..\..\CMakeLists.txt C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeDependentOption.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\MSVC-C.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-C.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake C$:\Program$ Files\Microsoft$ Visual$ Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake CMakeCache.txt CMakeFiles\3.22.22022201-MSVC_2\CMakeCCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeCXXCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeRCCompiler.cmake CMakeFiles\3.22.22022201-MSVC_2\CMakeSystem.cmake D$:\Project_Git\vcpkg\scripts\buildsystems\vcpkg.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
